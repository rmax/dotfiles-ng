# vi:ft=gitcommit:tw=72:sw=2:ts=2:expandtab:spell
#
# 50-character subject line. Example:
#
# <type>: <summary>

# 72-character wrapped longer description.
#
# Why is this change needed?

# How does it address the issue?

# Provide links to any relevant tickets, articles or other resources

# The first line of the commit message starts with a capitalized acronym
# (options listed below) indicating what type of commit this is.  Then a
# blank line, then more text if needed.  Lines shouldn't be longer than
# 72 characters.  If the commit is related to a ticket, indicate that
# with "See #3456", "See ticket 3456", "Closes #3456" or similar.
#
# Example:
#
#    ENH: Allow to pass debug flag.
#
#    This improves development workflow. See #123.
#
#    REL: Bumped version to 0.1.2.
#
#
# Standard acronyms:
#
# API: an (incompatible) API change
# BLD: change related to building numpy
# BUG: bug fix
# DEP: deprecate something, or remove a deprecated object
# DEV: development tool or utility
# DOC: documentation
# ENH: enhancement
# MAINT: maintenance commit (refactoring, typos, etc.)
# REV: revert an earlier commit
# STY: style fix (whitespace, PEP8)
# TST: addition or modification of tests
# REL: related to releasing numpy
#
# Source: SciPy's development workflow.
#
# Example semantic commit messages:
# chore: add Oyster build script
# docs: explain hat wobble
# feat: add beta sequence
# fix: remove broken confirmation message
# refactor: share logic between 4d3d3d3 and flarhgunnstow
# style: convert tabs to spaces
# test: ensure Tayne retains clothing
#
# Use <type>! to notice breaking change or BREAKING CHANGE in the
# description.
